{"version":3,"sources":["components/Person.js","components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","name","number","handleDelete","onClick","Persons","persons","map","id","key","Filter","filter","handleChange","value","onChange","PersonForm","handleSubmit","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","target","type","Notification","notification","status","message","className","baseUrl","axios","get","then","res","data","body","post","delete","person","put","App","setPersons","setFilter","setNotification","useEffect","personService","handleNotification","setTimeout","find","window","confirm","newPerson","el","catch","err","response","error","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.620aa405.chunk.js","sourcesContent":["import React from 'react';\n\nconst Person = ({ name, number, handleDelete }) => {\n  return (\n    <div>\n      {name} {number} <button onClick={handleDelete}>delete</button>\n    </div>\n  );\n};\n\nexport default Person;\n","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ persons, handleDelete }) => {\n  return (\n    <>\n      {persons.map(({ name, number, id }) => (\n        <Person\n          key={name}\n          name={name}\n          number={number}\n          handleDelete={() => handleDelete(id)}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Filter = ({ filter, handleChange }) => {\n  return (\n    <div>\n      filter shown with: <input value={filter} onChange={handleChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\n\nconst PersonForm = ({ handleSubmit }) => {\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  // I chose to keep the name and number state on form instead of App.js as the controlled component's state should ideally stay where it's controlled\n  const handleNameChange = event => setNewName(event.target.value);\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    setNewName('');\n    setNewNumber('');\n    handleSubmit(newName, newNumber);\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  const { status, message } = notification;\n\n  if (!status) return null;\n\n  return <div className={`notification ${status}`}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseUrl = 'api/persons';\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(res => res.data);\n};\n\nconst createPerson = body => {\n  return axios.post(baseUrl, body).then(res => res.data);\n};\n\nconst deletePerson = id => {\n  return axios.delete(`${baseUrl}/${id}`).then(() => 'success');\n};\n\nconst updatePerson = person => {\n  return axios.put(`${baseUrl}/${person.id}`, person).then(res => res.data);\n};\n\nexport default { getAll, createPerson, deletePerson, updatePerson };\n","import React, { useState, useEffect } from 'react';\n\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Notification from './components/Notification';\n\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState({});\n\n  useEffect(() => {\n    personService.getAll().then((persons) => setPersons(persons));\n  }, []);\n\n  const handleFilterChange = (event) => setFilter(event.target.value);\n\n  const handleNotification = (status, message) => {\n    setNotification({ status, message });\n    setTimeout(() => {\n      setNotification({});\n    }, 1000);\n  };\n\n  const handleFormSubmit = (name, number) => {\n    const person = persons.find((person) => person.name === name);\n\n    if (person) {\n      if (\n        window.confirm(\n          `${name} is already added to the database. Replace the old number with the new one?`\n        )\n      ) {\n        personService\n          .updatePerson({ ...person, name, number })\n          .then((newPerson) => {\n            setPersons(\n              persons.map((el) => (el.id === newPerson.id ? newPerson : el))\n            );\n            handleNotification('success', `Updated ${name}`);\n          })\n          .catch(() =>\n            handleNotification(\n              'error',\n              `Information of ${name} has been already removed from the server`\n            )\n          );\n      }\n    } else {\n      personService\n        .createPerson({ name, number })\n        .then((newPerson) => {\n          setPersons([...persons, newPerson]);\n          handleNotification('success', `Added ${name}`);\n        })\n        .catch((err) => handleNotification('error', err.response.data.error));\n    }\n  };\n\n  const handleDelete = (id) => {\n    const person = persons.find((person) => person.id === id);\n\n    if (window.confirm(`Delete ${person.name}`)) {\n      personService\n        .deletePerson(id)\n        .then((res) => {\n          if (res === 'success') {\n            setPersons(persons.filter((person) => person.id !== id));\n          }\n        })\n        .catch(() =>\n          handleNotification(\n            'error',\n            `${person.name} does not exist on the server`\n          )\n        );\n    }\n  };\n\n  const returnFiltered = () =>\n    persons.filter((person) =>\n      person.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter filter={filter} handleChange={handleFilterChange} />\n\n      <h2>add a new</h2>\n      <PersonForm handleSubmit={handleFormSubmit} />\n\n      <h2>Numbers</h2>\n      <Persons persons={returnFiltered()} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}